version: '3.6'

services:
  zookeeper:
    image: 'confluentinc/cp-zookeeper:7.5.5'
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "2181" ]
      interval: 10s
      timeout: 5s
      retries: 3

  kafka:
    image: 'confluentinc/cp-kafka:7.5.5'
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - '9092:9092'
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: [ "CMD", "kafka-broker-api-versions", "--bootstrap-server=localhost:9092" ]
      interval: 10s
      timeout: 5s
      retries: 3

  akhq:
    image: tchiotludo/akhq
    ports:
      - "8084:8080"
    environment:
      MICRONAUT_CONFIG_FILES: "/app/my-application.yml"
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "8080" ]
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - './akhq-configuration.yml:/app/my-application.yml:Z'

  postgres:
    image: postgres:16.3
    container_name: db
    shm_size: 128mb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 3
